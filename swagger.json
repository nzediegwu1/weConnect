{
	"swagger": "2.0",
	"info": {
		"version": "1.0.0",
		"title": "WeConnect",
		"description": "WeConnect provides a platform that brings businesses and individuals together. This platform creates awareness for businesses and gives the users the ability to write reviews about the businesses they have interacted with. View The UI template [Here](https://seunzone.github.io/weConnect/template/), Test API endpoints [Here](https://weconnect007.herokuapp.com/)",
		"contact": {
    	"email": "darealseun@gmail.com"
		},
		"license": {
			"name": "ISC",
			"url": "https://opensource.org/licenses/ISC"
		}
	},
	"host": "localhost:3000",
	"basePath": "/api/v1/",
	"tags": [
		{
			"name": "Users",
			"description": "API for users in the system"
		},
		{
			"name": "Businesses",
			"description": "API for businesses in the system"
		}
	],
	"schemes": [
		"http"
	],
	"consumes": [
		"application/json"
	],
	"produces": [
		"application/json"
	],
	"paths": {
		"/auth/signup": {
			"post": {
				"summary": "User signup",
				"tags": [
					"Users"
				],
				"description": "Register a user",
				"parameters": [
					{
						"name": "user",
						"in": "body",
						"description": "signup sucessful",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UserSignUp"
						}
					}
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "signup sucessful"
					}
				}
			}
		},
		"/auth/login": {
			"post": {
				"summary": "User login",
				"tags": [
					"Users"
				],
				"description": "Login a user",
				"parameters": [
					{
						"name": "user",
						"in": "body",
						"description": "A user that wants to login",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UserLogin"
						}
					}
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/businesses": {
			"post": {
				"summary": "Register a business",
				"tags": [
					"Businesses"
				],
				"description": "Register a business",
				"parameters": [
					{
						"name": "business",
						"in": "body",
						"description": "A new business that we want to register",
						"required": true,
						"schema": {
							"$ref": "#/definitions/BusinessRegister"
						}
					}
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Profile created successfully"
					}
				}
			},
			"get": {
				"tags": [
					"Businesses"
				],
				"summary": "Get all businesses",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Found"
						}
					}
				}
			}
		},
		"/businesses/{businessId}": {
			"put": {
				"summary": "Update business profile",
				"tags": [
					"Businesses"
				],
				"parameters": [
					{
						"name": "business",
						"in": "body",
						"description": "Business with new values of properties",
						"schema": {
							"$ref": "#/definitions/BusinessRegister"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update successful"
					}
				}
			},
			"delete": {
				"summary": "Remove a business",
				"tags": [
					"Businesses"
				],
				"description": "Operation can only be performed by a logged in user.",
				"parameters": [
					{
						"id": "businessId",
						"in": "path",
						"description": "The id of the business to be deleted",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "profile deleted"
					}
				}
			},
			"get": {
				"tags": [
					"Businesses"
				],
				"summary": "Get a business with given ID",
				"parameters": [
					{
						"id": "businessId",
						"in": "path",
						"description": "The id of the business to be found",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Business found",
						"schema": {
							"$ref": "#/definitions/Found"
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					}
				}
			}
		},
		"/businesses/{businessId}/reviews": {
			"post": {
				"summary": "Add a review for a business",
				"tags": [
					"Businesses"
				],
				"description": "Review a business",
				"parameters": [
					{
						"name": "business",
						"in": "body",
						"description": "Add a new business review",
						"required": true,
						"schema": {
							"$ref": "#/definitions/BusinessReview"
						}
					}
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "success"
					}
				}
			},
			"get": {
				"tags": [
					"Businesses"
				],
				"summary": "Get all reviews for a business",
				"parameters": [
					{
						"id": "businessId",
						"in": "query",
						"description": "The id of the business to get all reviews",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Business review is found",
						"schema": {
							"$ref": "#/definitions/Found"
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					}
				}
			}
		},
		"/businesses?location={location}": {
			"get": {
				"tags": [
					"Businesses"
				],
				"summary": "Get all businesses with the specified location",
				"parameters": [
					{
						"location": "place",
						"in": "query",
						"description": "The name of the location to search for",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Business exist",
						"schema": {
							"$ref": "#/definitions/Found"
						}
					},
					"400": {
						"description": "Invalid location supplied"
					}
				}
			}
		},
		"/businesses?category={category}": {
			"get": {
				"tags": [
					"Businesses"
				],
				"summary": "Get all businesses with the specified category",
				"parameters": [
					{
						"category": "category",
						"in": "query",
						"description": "The name of the category to search for",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Business exist",
						"schema": {
							"$ref": "#/definitions/Found"
						}
					},
					"400": {
						"description": "Invalid category supplied"
					}
				}
			}
		}
	},
	"definitions": {
		"UserSignUp": {
			"type": "object",
			"required": [
				"email",
				"username",
				"password"
			],
			"properties": {
				"username": {
					"type": "string",
					"uniqueItems": true
				},
				"email": {
					"type": "string",
					"uniqueItems": true
				},
				"password": {
					"type": "string",
					"uniqueItems": true
				}
			}
		},
		"UserLogin": {
			"type": "object",
			"required": [
				"email",
				"password"
			],
			"properties": {
				"email": {
					"type": "string",
					"uniqueItems": true
				},
				"password": {
					"type": "string",
					"uniqueItems": true
				}
			}
		},
		"BusinessRegister": {
			"type": "object",
			"required": [
				"name",
				"address",
				"details"
			],
			"properties": {
				"name": {
					"type": "string"
				},
				"address": {
					"type": "string"
				},
				"details": {
					"type": "string"
				}
			}
		},
		"Found": {
			"type": "object",
			"required": [
				"business"
			],
			"properties": {
				"business": {
					"type": "object"
				}
			}
		},
		"BusinessReview": {
			"type": "object",
			"required": [
				"name",
				"review"
			],
			"properties": {
				"name": {
					"type": "string"
				},
				"review": {
					"type": "string"
				}
			}
		}
	}
}